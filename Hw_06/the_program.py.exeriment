#!/usr/bin/env python3

# The decimal number, 585 = 1001001001 in binary, is palindromic in both bases.
# Find the sum of all numbers, less than one million, which are palindromic in
# base 10 and base 2. (Please note that the palindromic number,
# in either base, may not include leading zeros.)

'''
>>> n = "1234567"
>>> n[:int(len(n)/2)]
'123'
>>> n[::-1][:int(len(n)/2)]
'765'
>>> 
'''

def ispolidec(number):
  return (\
         len(number) == 1 or \
         number[::+1][:len(number)//2] == \
         number[::-1][:len(number)//2]\
         )

def ispolibin(number):
  return (\
         len(bin(int(number))[2:]) == 1 or\
         bin(int(number))[2:][::+1][:len(bin(int(number))[2:])//2] ==\
         bin(int(number))[2:][::-1][:len(bin(int(number))[2:])//2]\
         )

def ispoli(number):
  return (\
    len(number) == 1 or \
    number[::+1][:len(number)//2] == \
    number[::-1][:len(number)//2]\
    )\
    and\
    (\
    len(bin(int(number))[2:]) == 1 or\
    bin(int(number))[2:][::+1][:len(bin(int(number))[2:])//2] == \
    bin(int(number))[2:][::-1][:len(bin(int(number))[2:])//2]\
    )

# print("Decimal:")
# print("y", ispolidec("1"))
# print("y", ispolidec("11"))
# print("y", ispolidec("121"))
# print("n", ispolidec("12345566432"))
# print("y", ispolidec("12344321"))
# print("y", ispolidec("123454321"))
# print()
# print("Binary:")
# print("y", ispolibin("1"))
# print("y", ispolibin("3"))
# print("y", ispolibin("5"))
# print("y", ispolibin("7"))
# print("y", ispolibin("9"))
# print("y", ispolibin("33"))
# print("y", ispolibin("99"))
# print("y", ispolibin("313"))
# print("y", ispolibin("585"))
# print("y", ispolibin("717"))
# print("y", ispolibin("7447"))
# print("y", ispolibin("9009"))
# print("y", ispolibin("15351"))
# print("y", ispolibin("32223"))
# print("y", ispolibin("39993"))
# print("y", ispolibin("53235"))
# print("y", ispolibin("53835"))
# print("y", ispolibin("73737"))
# print("y", ispolibin("585585"))
# print("y", ispolibin("129"))
# print("n", ispolibin("2"))
# print("n", ispolibin("40"))

s = 0

for i in range(10000000):
  if i % 2 == 0:
    continue
  if ispoli(str(i)):
    s += i

print(s)

'''
What is bad about this prog:
The round() function,
>>> 7/2;9/2
3.5
4.5
>>> round(7/2);round(9/2)
4
4
>>>
'''
