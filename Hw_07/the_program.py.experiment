#!/usr/bin/env python3

# 1st try

def first_try():
  s = ""
  l = []
  sh = []
  sh_u = []

  with open("/etc/passwd") as fin:
    s = fin.read()

  l = s.strip().split("\n")

  for i in l:
    sh.append(i.split(":")[-1])

  sh_u = list(set(sh))
  sh_u.sort()

  for i in sh_u:
    print(i, "-", s.count(i), end = " ; ")

# 2nd try

import pprint

def second_try():
  
  # works
  def get_uids(passwd):
    '''
    "uid": {
      "name": "",
      "group": "",
      "shell": ""
    }
    '''
    uids = dict()
    l = passwd.strip().split("\n")
    for i in l:
      uids[i.split(":")[2]] = {"name": i.split(":")[0],\
                               "group": i.split(":")[3],\
                               "shell": i.split(":")[6]}
    return uids
  
  # def get_gids_old(groups):
  #   '''
  #   "gid": {
  #     "name": "",
  #     "users": []
  #   }
  #   '''
  #   gids = dict()
  #   l = groups.strip().split("\n")
  #   for i in l:
  #     gids[i.split(":")[2]] = {"name": i.split(":")[0],\
  #                              "users": i.split(":")[3].split(",")}
  #   return gids

  # works
  def get_gids(groups, users):
    '''
    "gid": {
      "name": "",
      "users": []
    }
    '''
    gids = dict()
    l = groups.strip().split("\n")
    for i in l:
      gids[i.split(":")[2]] = {"name": i.split(":")[0],\
                               "users": i.split(":")[3].split(",")}

    for i in gids.values():
      if "" in i["users"]:
        i["users"].remove("")

    for i in users.values():
      if i["group"] in gids and \
      i["name"] not in gids[i["group"]]["users"]:
        gids[i["group"]]["users"].append(i["name"])
    return gids

  # works
  def get_sh(uids):
    shells = {}
    for i in uids.values():
      if i["shell"] in shells:
        shells[i["shell"]] += 1
      else:
        shells[i["shell"]] = 1
    return shells

  # запутался не понимаю что делать
  # слишком
  def get_g_u(gids, uids):
    output = ""
    g_u = {}
    for i in gids.values(): # {"name": ..., "users": []}
      for j in i["users"]: # [u_name1, u_name2, ...]
        for key,val in uids.items():
        # [('key1', {'key11': 'val', 'key12': 'val', ...}), 
        #  ('key2', {'key21': 'val', 'key22': 'val', ...})]
          if j == val["name"]: # u_name1 == "name": "..."
            # output += i["name"] + ":" + key + ","
            output += key + ","
      # output += "\n"
      #       output += key + ","
        g_u[i["name"]] = output.split(",")

    return g_u
  
  passwd = ""
  groups = ""

  with open("/etc/passwd") as fin:
    for line in fin:
      if not line.startswith("#"):
        passwd += line
  with open("/etc/group") as fin:
    for line in fin:
      if not line.startswith("#"):
        groups += line

  uids = get_uids(passwd)
  # gids = get_gids_old(groups)
  gids = get_gids(groups, uids)
  sh = get_sh(uids)
  g_u = get_g_u(gids, uids)
  
  return len(g_u)

def third_try():

  def make_dict(file, col1, col2):
    d = dict()
    key = col1 - 1
    val = col2 - 1
    l = file.strip().split("\n")
    for i in l:
      d[i.split(":")[key]] = i.split(":")[val]
    return d

  def g_f_u(g_u, gid_g, passwd):
    g_f_u = g_u.copy()
    for i in passwd.strip().split("\n"):
      u_name = i.split(":")[0]
      gid = i.split(":")[3]
      g_name = gid_g[gid]
      if u_name not in g_u[g_name]:
        if g_f_u[g_name] == "":
          g_f_u[g_name] += u_name
        else:
          g_f_u[g_name] += "," + u_name
    return g_f_u

  def g_f_uid(g_f_u, u_uid):
    g_f_uid = g_f_u.copy()
    for key in g_f_u:
      tl = g_f_u[key].split(",")
      tl1 = []
      for u_name in tl:
        if u_name != "":
          tl1.append(u_uid[u_name])
      g_f_uid[key] = ",".join(tl1)
    return g_f_uid

  passwd = ""
  group = ""

  with open("/etc/passwd") as fin:
    for line in fin:
      if not line.startswith("#"):
        passwd += line
  with open("/etc/group") as fin:
    for line in fin:
      if not line.startswith("#"):
        group += line

  u_uid = make_dict(passwd, 1, 3)
  u_s = make_dict(passwd, 1, 7)
  g_u = make_dict(group, 1, 4)
  gid_g = make_dict(group, 3, 1)
  g_f_u = g_f_u(g_u, gid_g, passwd)
  g_f_uid = g_f_uid(g_f_u, u_uid)

  return g_f_uid

pprint.pprint(third_try())
# print(second_try())
# second_try()